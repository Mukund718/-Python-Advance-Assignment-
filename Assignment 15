Assignment 15 Solutions
1. What are the new features added in Python 3.8 version?
Ans: Some New Features Added in Python 3.8 Version are:

Walrus Operator: This operator is used to assign and return a value in the same expression. This removes the need for initializing the variable upfront. The major benefit of this is it saves some lines of code. It is also known as The Walrus Operator due to its similarity to the eyes and tusks of a walrus.

yield and return statements do not require parentheses to return multiple values.

Reversed works with a dictionary. The built-in method reversed() can be used for accessing the elements in the reverse order of insertion

Dict comprehensions have been modified so that the key is computed first and the value second.

importlib_metadata is a new library added in the Python’s standard utility modules, that provides an API for accessing an installed package’s metadata, such as its entry points or its top-level name.

f-strings now support = , to make string interpolation easy. Python 3.8 allows the use of the above-discussed assignment operator and equal sign (=) inside the f-strings.

In the three-argument form of pow(), when the exponent is -1, it calculates the modular multiplicative inverse of the given value

The csv.DictReader now returns instances of dictionary instead of a collections.OrderedDict.

If you miss a comma in your code such as a = [(1, 2) (3, 4)], instead of throwing TypeError, it displays an informative Syntax warning.

# Example of Walrus Operator
if (sum := 10 + 5) > 10: # its always recommended to use paranthesis with walrus operator
    print(sum) #return 15 

# Example of yield and return
def hello():
    return 'Hello','Good Morning'
print(hello())
def count():
    for i in range(5):
        yield i,i**2
for ele in count():
    print(ele, end=" ")
print()
    
# Example of Reversed Support for dict
t_dict = {"Name":"Mano Vishnu","Role":"Data Scientist"}
for ele in reversed(t_dict):
    print(f'{ele}:"{t_dict[ele]}"')
    
# Example of using = in F-strings
len_string = len("Ineuron Full Stack Data Science")
print(f'The length of string is {len_string = }')

# Example of Infomrative syntax instead of synatx error while missing comma.
r_list = [(1,2) (3,4)]
  File "<ipython-input-1-5c677d2a8075>", line 2
    if (sum := 10 + 5) > 10: # its always recommended to use paranthesis with walrus operator
            ^
SyntaxError: invalid syntax
